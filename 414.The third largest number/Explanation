要求求第三大的数字，但是数组的长度有可能不超过三个，所以直接把第一、第二和第三大的数字都求出来。
最后判断一下是不是有第三大的，没有就直接放回当前最大，有就返回max1

my code:
func thirdMax(nums []int) int {
	max1, max2, max3 := nums[0], nums[0], nums[0] //初始化,max1为最大值，max2为第二大值，max3为第三大值
	for i := 1; i < len(nums); i++ {              //遍历数组
		if nums[i] > max1 { //如果当前值大于最大值
			max3 = max2
			max2 = max1
			max1 = nums[i]
		} else if nums[i] > max2 && nums[i] < max1 { //如果当前值大于第二大值，小于最大值
			max3 = max2
			max2 = nums[i]
		} else if nums[i] > max3 && nums[i] < max2 { //如果当前值大于第三大值，小于第二大值
			max3 = nums[i]
		}
	}
	if max3 == max2 { //如果第三大值等于第二大值，说明数组中没有第三大值，返回最大值
		return max1
	}
	return max3 //返回第三大值

}
